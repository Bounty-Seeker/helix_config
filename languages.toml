# introduce new language server
[language-server.scls]
command = "simple-completion-language-server"

[language-server.scls.config]
max_completion_items = 100           # set max completion results len for each group: words, snippets, unicode-input
feature_words = false                 # enable completion by word
feature_snippets = true              # enable snippets
snippets_first = true                # completions will return before snippets by default
snippets_inline_by_word_tail = false # suggest snippets by WORD tail, for example text `xsq|` become `x^2|` when snippet `sq` has body `^2`
feature_unicode_input = false        # enable "unicode input"
feature_paths = false                # enable path completion
feature_citations = false            # enable citation completion (only on `citation` feature enabled)


# write logs to /tmp/completion.log
[language-server.scls.environment]
RUST_LOG = "info,simple-completion-language-server=info"
LOG_FILE = "/tmp/completion.log"

[[language]]
name = "rust"
language-servers = [ "scls", "rust-analyzer" ]
# config = { checkOnSave = { "command" = "clippy" } }

[language-server.rust-analyzer.config]
check = { command = "clippy" }
# completion.callable.snippets = "add_parentheses"


# introduce a new language to enable completion on any doc by forcing set language with :set-language stub
[[language]]
name = "stub"
scope = "text.stub"
file-types = []
shebangs = []
roots = []
auto-format = false
language-servers = [ "scls" ]

[[language]]
name = "git-commit"
language-servers = [ "scls" ]

#[[language]]
#name = "text"
#language-servers = [ "scls" ]

[[language]]
name = "markdown"
language-servers = [ "marksman", "markdown-oxide", "scls" ]

[[language]]
name = "python"
language-servers = ["ruff", "jedi-language-server", "pylsp", "scls" ]

